# Generated by Django 5.2.4 on 2025-08-20 01:33

from django.db import migrations, models
from django.utils.text import slugify

def generate_page_slugs(apps, schema_editor):
    """Generate slugs for existing pages"""
    Page = apps.get_model('wcms', 'Page')
    
    for page in Page.objects.all():
        # Generate a unique slug based on the title
        base_slug = slugify(page.title) if hasattr(page, 'title') and page.title else slugify(page.name) if hasattr(page, 'name') and page.name else 'page'
        
        slug = base_slug
        counter = 1
        
        # Keep trying until we find a unique slug
        while Page.objects.filter(slug=slug).exists():
            slug = f"{base_slug}-{counter}"
            counter += 1
            
        page.slug = slug
        
        with open('debug.txt', 'a') as f:
            f.write(f"slug: {page.slug}\n")

        page.save()


def reverse_generate_page_slugs(apps, schema_editor):
    """Reverse operation - clear all slugs"""
    Page = apps.get_model('wcms', 'Page')
    Page.objects.update(slug='')


class Migration(migrations.Migration):

    dependencies = [
        ('wcms', '0005_bucket_slug'),
    ]

    operations = [
        migrations.AddField(
            model_name='page',
            name='slug',
            field=models.SlugField(default='temp-slug', editable=False, max_length=255, unique=True),
            preserve_default=False,
        ),
        migrations.RunPython(generate_page_slugs, reverse_generate_page_slugs),
    ]
